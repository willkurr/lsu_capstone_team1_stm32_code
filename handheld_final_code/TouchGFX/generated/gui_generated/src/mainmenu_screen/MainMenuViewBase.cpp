/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainmenu_screen/MainMenuViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

MainMenuViewBase::MainMenuViewBase() :
    flexButtonCallback(this, &MainMenuViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    mainMenuBackground.setPosition(0, 0, 320, 240);
    mainMenuBackground.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(mainMenuBackground);

    menuStatusBarBackground.setPosition(0, 0, 320, 26);
    menuStatusBarBackground.setColor(touchgfx::Color::getColorFromRGB(0, 102, 153));
    add(menuStatusBarBackground);

    digitalClock.setPosition(245, 4, 75, 19);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BNV));
    digitalClock.displayLeadingZeroForHourIndicator(false);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_12_HOUR_NO_SECONDS);
    digitalClock.setTime12Hour(10, 10, 0, true);
    add(digitalClock);

    recordingCircle.setPosition(211, -8, 45, 42);
    recordingCircle.setCenter(20, 20);
    recordingCircle.setRadius(10);
    recordingCircle.setLineWidth(0);
    recordingCircle.setArc(0, 360);
    recordingCirclePainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    recordingCircle.setPainter(recordingCirclePainter);
    add(recordingCircle);

    batteryBox2.setPosition(3, 4, 41, 19);
    batteryBox2.setColor(touchgfx::Color::getColorFromRGB(89, 214, 51));
    add(batteryBox2);

    batteryBox1.setPosition(43, 8, 7, 12);
    batteryBox1.setColor(touchgfx::Color::getColorFromRGB(89, 214, 51));
    add(batteryBox1);

    batteryLevelTextArea.setXY(4, 4);
    batteryLevelTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    batteryLevelTextArea.setLinespacing(0);
    Unicode::snprintf(batteryLevelTextAreaBuffer, BATTERYLEVELTEXTAREA_SIZE, "%s", touchgfx::TypedText(T_BATTERYPERCENTWILDCARD).getText());
    batteryLevelTextArea.setWildcard(batteryLevelTextAreaBuffer);
    batteryLevelTextArea.resizeToCurrentText();
    batteryLevelTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ITFJ));
    add(batteryLevelTextArea);

    wifiIconImage.setXY(56, 3);
    wifiIconImage.setBitmap(touchgfx::Bitmap(BITMAP_WIFIICON_ID));
    add(wifiIconImage);

    notConnectedLine.setPosition(53, 0, 32, 26);
    notConnectedLinePainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    notConnectedLine.setPainter(notConnectedLinePainter);
    notConnectedLine.setStart(5, 5);
    notConnectedLine.setEnd(26, 20);
    notConnectedLine.setLineWidth(5);
    notConnectedLine.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(notConnectedLine);

    methaneLevelTextArea.setXY(70, 41);
    methaneLevelTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    methaneLevelTextArea.setLinespacing(0);
    Unicode::snprintf(methaneLevelTextAreaBuffer, METHANELEVELTEXTAREA_SIZE, "%s", touchgfx::TypedText(T_METHANELEVELWILDCARD).getText());
    methaneLevelTextArea.setWildcard(methaneLevelTextAreaBuffer);
    methaneLevelTextArea.resizeToCurrentText();
    methaneLevelTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Y76));
    add(methaneLevelTextArea);

    methaneUnitTextArea.setXY(139, 102);
    methaneUnitTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    methaneUnitTextArea.setLinespacing(0);
    Unicode::snprintf(methaneUnitTextAreaBuffer, METHANEUNITTEXTAREA_SIZE, "%s", touchgfx::TypedText(T_METHANEUNITWILDCARD).getText());
    methaneUnitTextArea.setWildcard(methaneUnitTextAreaBuffer);
    methaneUnitTextArea.resizeToCurrentText();
    methaneUnitTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5TDF));
    add(methaneUnitTextArea);

    faultStatusCircle.setPosition(35, 139, 43, 36);
    faultStatusCircle.setCenter(20, 20);
    faultStatusCircle.setRadius(15);
    faultStatusCircle.setLineWidth(0);
    faultStatusCircle.setArc(0, 360);
    faultStatusCirclePainter.setColor(touchgfx::Color::getColorFromRGB(209, 209, 209));
    faultStatusCircle.setPainter(faultStatusCirclePainter);
    add(faultStatusCircle);

    overRangeAlarmStatus.setPosition(168, 139, 43, 36);
    overRangeAlarmStatus.setCenter(20, 20);
    overRangeAlarmStatus.setRadius(15);
    overRangeAlarmStatus.setLineWidth(0);
    overRangeAlarmStatus.setArc(0, 360);
    overRangeAlarmStatusPainter.setColor(touchgfx::Color::getColorFromRGB(209, 209, 209));
    overRangeAlarmStatus.setPainter(overRangeAlarmStatusPainter);
    add(overRangeAlarmStatus);

    faultStatusTextArea.setXY(78, 145);
    faultStatusTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    faultStatusTextArea.setLinespacing(0);
    faultStatusTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TEVQ));
    add(faultStatusTextArea);

    overRangeAlarmTextArea.setXY(211, 145);
    overRangeAlarmTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    overRangeAlarmTextArea.setLinespacing(0);
    overRangeAlarmTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CRU9));
    add(overRangeAlarmTextArea);

    muteFlexButton.setBoxWithBorderPosition(0, 0, 80, 37);
    muteFlexButton.setBorderSize(3);
    muteFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    muteFlexButton.setText(TypedText(T_MUTEBUTTONTEXT));
    muteFlexButton.setTextPosition(0, 0, 80, 37);
    muteFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(161, 161, 161));
    muteFlexButton.setPosition(0, 203, 80, 37);
    add(muteFlexButton);

    startLoggingFlexButton.setBoxWithBorderPosition(0, 0, 80, 37);
    startLoggingFlexButton.setBorderSize(3);
    startLoggingFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    startLoggingFlexButton.setText(TypedText(T_LOGGINGBUTTONTEXT));
    startLoggingFlexButton.setTextPosition(0, 0, 80, 37);
    startLoggingFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(156, 156, 156));
    startLoggingFlexButton.setAction(flexButtonCallback);
    startLoggingFlexButton.setPosition(80, 203, 80, 37);
    add(startLoggingFlexButton);

    changeUnitFlexButton.setBoxWithBorderPosition(0, 0, 80, 37);
    changeUnitFlexButton.setBorderSize(3);
    changeUnitFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    changeUnitFlexButton.setText(TypedText(T_CHANGEUNITTEXT));
    changeUnitFlexButton.setTextPosition(0, 0, 80, 37);
    changeUnitFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(133, 133, 133));
    changeUnitFlexButton.setPosition(160, 203, 80, 37);
    add(changeUnitFlexButton);

    optionsMenuFlexButton.setBoxWithBorderPosition(0, 0, 80, 37);
    optionsMenuFlexButton.setBorderSize(3);
    optionsMenuFlexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    optionsMenuFlexButton.setText(TypedText(T___SINGLEUSE_N6CW));
    optionsMenuFlexButton.setTextPosition(0, 9, 80, 37);
    optionsMenuFlexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(173, 173, 173));
    optionsMenuFlexButton.setAction(flexButtonCallback);
    optionsMenuFlexButton.setPosition(240, 203, 80, 37);
    add(optionsMenuFlexButton);
}

MainMenuViewBase::~MainMenuViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainMenuViewBase::setupScreen()
{
    transitionBegins();
}

void MainMenuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &startLoggingFlexButton)
    {
        //showRecordingCirc
        //When startLoggingFlexButton clicked show recordingCircle
        //Show recordingCircle
        recordingCircle.setVisible(true);
        recordingCircle.invalidate();
        //hideRecordingCirc
        //When startLoggingFlexButton clicked hide recordingCircle
        //Hide recordingCircle
        recordingCircle.setVisible(false);
        recordingCircle.invalidate();
    }
    if (&src == &optionsMenuFlexButton)
    {
        //optionsButtonClicked
        //When optionsMenuFlexButton clicked change screen to Options
        //Go to Options with no screen transition
        application().gotoOptionsScreenNoTransition();
    }
}

void MainMenuViewBase::transitionBegins()
{
    //hideRecordingCircAtStart
    //When screen transition begins hide recordingCircle
    //Hide recordingCircle
    recordingCircle.setVisible(false);
    recordingCircle.invalidate();
}
